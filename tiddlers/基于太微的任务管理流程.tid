created: 20211222051512128
creator: 林一二
modified: 20220705065229453
modifier: 林一二
se-type: 
tags: 想法 GTD
title: 基于太微的任务管理流程
type: text/vnd.tiddlywiki

其实也是项目管理，为方便理解，我们将项目树的叶子节点称为任务。此管理流程将管理这整棵项目树，包括其中的任务。

!! 设计目标

!!! 优化录入速度，定期优化读取速度

* 快速录入任务、能导致任务的想法。
* 定期整理缺乏深层意义关联的任务，给它们加上关联。
* 定期调整实际上已经低优的项目在系统里的优先级数值，以免它们经常出现

!!! 减少任务列表长度

优化读取速度，让查看当下要做的任务更简单。

为了让任务列表短，就得让当天加入列表的任务数量＜当天能完成的任务数量。
参考[[PARA]]，如果把「项目」类型的任务放入待办列表，它们就很久不会被挪出去，从而让列表越来越长。所以应该让待办列表里只放拆解出来的小任务，不放耗时较长的任务（除非当天只做这一个长任务，这样列表不会边长而且做完它就会清空）。

有的任务需要长期跟进，但又不希望每天都被它提醒干扰，可以为它加上「间隔重复标签」（例如在[[钓鱼插件]]里是「?」），在任务聚合器里不展示此类标签，仅靠间隔重复系统来定期提醒。

!!! 自动汇总任务所需情报

参考[[约维茨的决策系统论]]，情报支持执行，执行中又会收集到新的情报。我们应该提供快速创建看板、快速添加标签的能力，支持情报的自动化归总。

!! 实现方案

参考[[情报学三条理论原则]]，我们有以下设计：

!!! 本体论：设计几类底层标签及其数据

参考[[太微数据建模方案]]，定义 [[任务]] 标签表示短时间能完成的小任务，上面带上 due interval priority 等 TODO 管理所需的字段。以及 [[意义]] 标签，表示人生的意义、项目的意义等等，不仅''代表了项目本身''，也记录了项目的权重等等：

<<sticky "此处插入根据 GTD 元标签自动生成的标签列表，展示作用、字段等等。">>

!!!! 根据本体（或筛选器）匹配相关提示

类似[[带着问题间隔重复]]以及[[避免容易导致bug的产品设计]]，添加一些[[自动关联提示|在太微中自动关联提示]]到特定类型的任务下，提示当前新条目里需要做些什么。

这样也可以在打开非常多子节点的条目时，提醒用户该整理、拆分节点了，通过重新聚类的方式来鼓励思考其中的联系。

!!! 价值论：将子任务和知识关联到[[意义]]上

我们用项目的意义来作为项目文件夹（即我们的长期项目上都加有[[意义]]标签），没有意义的事情，我们不作为长期项目来跟进。

项目需要拆细为子任务，它们加上[[任务]]标签，我们的任务看板仅追踪任务的完成情况，每日待办列表也仅展示任务，而不展示项目。

# 任务中收集到的相关知识，通过在任务、项目中加指向知识的链接来产生关联。
# 在项目上展示「相关知识」看板，默认聚合两级链出的条目，不过可以根据项目所在知识网络领域特点修改过滤器。

!!!! OKR验证意义

[[意义]]有验收完结的时候，即其关键结果（Key Result —— KR）都验证通过的时候。拥有「关键结果」对于长期的意义来说很重要，因若不然，长期循环的意义就永远没有明确的退出机制，我们在定期回顾这个意义的时候也会需要花费更多的精力去评判是否需要调低这个意义的重要性。

此外，「列出关键结果」也是在鼓励我们拆解分析这个[[意义]]，梳理其内涵。

!!! 认识论：应用项目的关键流程模板、定期回顾更新认知

!!!! 流程模板相当于对执行项目的自己编程，控制自己的[[占意]]流

以小型软件工程项目为例，其关键有保证质量、与协作者同步好工期和需求，这些关键点会在特定情况下生成一些[[任务]]（有的是立即生成，例如必做的上线流程；有的是条件触发，例如有延期风险时告知自己的下游延期）。

需要模板内有一些按钮，点击后会自动生成一些任务、自动添加到特定知识条目的链接。这通过太微的模板插件和事件按钮功能可以实现。

在流程出现问题时，通过「元任务」实施干预，例如一个任务执行过久没完成，就自动插入一个分解该任务的元任务。任务管理系统实际上是一个元任务调度系统

!!!! 通过看板每日每时更新高优项目认知、通过间隔重复调度每周更新低优项目认知

!! 实现方案

形成「[[ITKG]]」方法。