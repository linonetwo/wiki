created: 20230315022720091
creator: 林一二
modified: 20230315023613574
modifier: 林一二
tags: 区块链
title: 每个完整节点的EVM都会把合约执行一遍
type: text/vnd.tiddlywiki

我之前一直对这点有疑惑，这样不是会浪费很多计算量吗？问了 ChatGPT4 后了解到这些浪费的计算量有助于保持去中心化，而且完整节点可以自行验证结果正确性不怕被其它节点欺骗。而不成为矿工节点只做普通完整节点就无需准备参与 POW POS 可以节省资源降低门槛。

!! ChatGPT：以太坊智能合约流程

''Human:''
以太坊是如何实现让虚拟机和区块链结合起来的？对于一个交易里的合约，是很多节点都会运行它吗？请从一个合约被 web3js 从浏览器提交开始，给出一个完整的流程

---

''Assistant:''

以太坊是一个去中心化的平台，它允许开发者编写和部署智能合约，智能合约可以在以太坊虚拟机（EVM）上运行。以下是一个简化的流程，描述了如何从Web3js提交一个合约到区块链上，以及如何在多个节点上运行合约。

# 开发者编写智能合约：首先，开发者需要使用Solidity（一种主要用于以太坊智能合约的编程语言）编写智能合约。
# 编译合约：接下来，开发者将使用合适的编译器（如solc）将Solidity合约编译成字节码，以便在EVM上运行。
# 使用Web3js与以太坊交互：开发者需要在浏览器中使用Web3js库。Web3js是一个JavaScript库，它允许开发者与以太坊节点进行通信，实现合约部署和交互。
# 部署合约：开发者将编译后的合约字节码、合约ABI（应用二进制接口，用于描述合约的方法和事件）以及其他必要的参数传递给Web3js。然后，开发者使用一个拥有足够以太币的账户（用于支付交易费用）签署部署合约的交易。
# 广播交易：签署的交易将被广播到以太坊网络。矿工们会将交易打包进一个新的区块，并通过工作量证明（PoW）或权益证明（PoS）等共识机制来达成共识。
# 部署成功：一旦交易被打包进一个区块并达成共识，合约就被成功地部署到以太坊区块链上。此时，合约将获得一个合约地址，用于以后的交互。
# 执行合约：当有人想要与合约互动时，他们会向合约发送一个交易，该交易会包含调用合约函数的信息。交易将被广播到网络，并最终被矿工打包进一个新的区块。
# 合约在多个节点上运行：为了保证去中心化，以太坊的每个节点都会运行EVM。当一个交易调用合约时，所有节点都会运行该合约，并验证交易的正确性。这确保了合约的执行结果在整个网络中保持一致。
# 更新状态：合约执行可能会导致区块链上的状态发生变化（例如，改变某个账户的余额或更新合约内的存储变量等）。当所有节点达成共识后，区块链的状态将被更新，以反映合约执行的结果。
# 事件和日志：合约可以触发事件，将特定信息记录到区块链日志中。这些事件可供开发者和前端应用程序监听和读取，以实时了解合约状态的变化。
# 与合约互动：用户和应用程序可以通过Web3js和合约ABI与已部署的合约进行交互。他们可以调用合约的函数、查询数据或发送交易等。

总之，智能合约在Web3js中通过浏览器提交到以太坊区块链上，然后在以太坊虚拟机（EVM）上运行。每个以太坊节点都会运行EVM，确保合约的执行结果在整个网络中保持一致。这有助于维护去中心化和安全性。
通过这个流程，以太坊实现了虚拟机和区块链的结合，允许开发者创建和部署去中心化应用程序。智能合约在EVM上运行，确保了在整个网络中的一致性和安全性。由于每个节点都会运行合约，这为去中心化提供了基础。

---

''Human:''
你提到「签署的交易将被广播到以太坊网络。矿工们会将交易打包进一个新的区块」，开发者只通过 Web3js 发给了一个节点，信息如何从这一个节点传播给「矿工们」的节点？

---

''Assistant:''

当开发者通过Web3js将交易发送给某个以太坊节点时，该节点会将交易加入到其本地的交易池（也称为mempool）中。交易池是一个暂存未确认交易的地方，等待矿工将它们打包进新区块。接下来，该节点会将交易广播到它所连接的其他节点。

这个广播过程是通过一个叫做“梯度泛洪”（Gossip Protocol）的点对点（P2P）协议实现的。简单来说，当一个节点收到一笔新的交易，它会将这笔交易转发给它所连接的其他节点。这些节点再次将交易转发给它们所连接的其他节点，如此反复进行。这样，交易会在整个网络中传播，最终被矿工节点接收到。

这个过程可以确保交易在整个以太坊网络中快速地传播，同时避免了重复广播的问题。在梯度泛洪协议中，每个节点会记录已经转发过的交易，以避免多次转发相同的交易。此外，节点还会对连接的其他节点进行评分，以优先选择高效、可靠的节点进行交互。

总之，当开发者通过Web3js将交易发送给一个以太坊节点时，这个节点会将交易加入到自己的交易池中，并通过梯度泛洪协议将交易广播给其他节点。这种方式确保交易能在整个以太坊网络中迅速传播，最终到达矿工节点。


---

''Human:''
你说「这种方式确保交易能在整个以太坊网络中迅速传播，最终到达矿工节点。」，难道不是所有节点都是矿工节点吗？如果有的节点不是矿工节点，也会运行 EVM 执行交易里的合约吗？

---

''Assistant:''

在以太坊网络中，并非所有节点都是矿工节点。以太坊网络有多种类型的节点，包括：

# 完整节点（Full Nodes）：完整节点存储整个区块链的副本，并验证所有交易和区块。它们执行EVM中的智能合约，并确保交易的正确性。完整节点参与网络中的交易传播，但不参与区块打包和挖矿。完整节点对于维护网络的安全和完整性至关重要。
# 矿工节点（Miner Nodes）：矿工节点也是完整节点的一种，除了验证交易和区块、执行智能合约之外，它们还负责将交易打包进新的区块并参与共识算法（如工作量证明PoW或权益证明PoS等）。矿工节点对于维护网络安全、处理交易以及创建新区块非常重要。
# 轻节点（Light Nodes）：轻节点并不存储整个区块链的副本，而是仅保存区块头信息。轻节点通过与完整节点通信来获取所需的交易和区块数据。它们不执行EVM中的智能合约，而是依赖完整节点进行合约验证和执行。轻节点主要用于移动设备和物联网设备等资源受限的场景。

当一个交易被广播到以太坊网络时，所有完整节点（包括矿工节点）都会执行交易中的智能合约。这是为了确保网络中的去中心化以及合约执行结果的一致性。然而，轻节点不会执行智能合约，它们依赖与之相连的完整节点来提供验证和执行结果。

综上所述，在以太坊网络中，不是所有节点都是矿工节点。然而，在非轻节点中，完整节点和矿工节点都会执行EVM中的智能合约。这有助于确保整个网络的去中心化和智能合约执行结果的一致性。

---

''Human:''
完整节点执行合约不能得到回报，为什么它们还愿意执行合约？它们为何不直接成为矿工节点？如果有的节点通过运行自定义的 EVM 给出错误的有利于某人的运行结果，会怎么样？

---

''Assistant:''

!!! 为什么完整节点愿意执行合约


尽管完整节点在执行智能合约时不会直接获得奖励，但它们仍然有很多理由去执行合约：

* 网络安全和去中心化：完整节点有助于维护以太坊网络的安全和去中心化。越多的完整节点加入网络，区块链数据就越分散，从而提高了网络的鲁棒性。这有助于避免单点故障和中心化攻击。
* 数据可靠性：作为完整节点的所有者，您可以随时验证交易和合约执行的正确性。这样，您可以确保自己在网络中使用的数据是准确的，而不需要依赖其他节点。
* 提供基础设施：完整节点可以为其他应用程序、轻节点和用户提供基础设施服务。这些服务可能包括区块链浏览器、钱包服务等。通过运营这些服务，完整节点的所有者可以获得商业收益。

!!! 完整节点为何不直接成为矿工节点
成为矿工节点需要投入额外的资源，如计算能力、电力和维护成本。挖矿竞争激烈，特别是在工作量证明（PoW）的共识机制中，因此并不是所有完整节点都有意愿或能力成为矿工节点。另外，在权益证明（PoS）共识中，需要质押一定数量的以太币才能成为验证者，这对完整节点的所有者来说也是一个门槛。

!!! 自定义EVM给出错误结果的情况：
如果一个节点故意或因误配置而使用自定义EVM给出错误的结果，这个节点很可能会被其他诚实节点所忽略。因为在以太坊网络中，多数诚实节点会遵循共识规则，正确执行智能合约。当一个节点给出错误结果时，它的结果与其他诚实节点的结果不一致，因此不会被网络所接受。

这种情况类似于双花攻击，只有当恶意节点占据网络的大部分时，这种攻击才有可能成功。但在去中心化的网络中，这种攻击的概率非常低。此外，如果一个节点频繁给出错误结果，其他节点可能会将其识别为恶意节点，并选择断开与该节点的连接，降低其在网络中的影响力。


---

''Human:''
其它诚实节点可能会如何将其识别为恶意节点？

---

''Assistant:''

在以太坊网络中，识别恶意节点并非一个简单的过程，但以下是一些建议和措施，可以帮助其他诚实节点识别并应对潜在的恶意行为：

# 结果一致性检查：当一个节点收到来自其他节点的智能合约执行结果时，它可以将这个结果与自己执行的结果进行对比。如果两者不一致，这可能意味着发送节点是一个恶意节点。诚实节点可以将此类节点标记为不可信任，并选择减少与它们的互动。
# 节点声誉系统：诚实节点可以实施一种声誉系统，用于评估与之相连的其他节点的行为。这种系统可以基于多种因素，如节点提供的数据准确性、响应速度等。当一个节点的声誉分数低于某个阈值时，诚实节点可以将其视为潜在的恶意节点，并减少与其的互动。
# 节点间通信：诚实节点之间可以分享有关恶意行为的信息。例如，当一个节点发现另一个节点提供了错误的智能合约执行结果时，它可以将此信息告知其他诚实节点。这样，诚实节点可以更快地识别潜在的恶意节点，并采取相应的行动。
# 安全阈值：在处理来自其他节点的数据时，诚实节点可以设置安全阈值。例如，一个节点可以要求至少收到来自一定数量节点的相同结果，才认为该结果是可信的。这有助于降低单个恶意节点影响网络的风险。

需要注意的是，这些措施并不能完全消除恶意节点带来的风险，但它们可以提高恶意行为被识别和应对的可能性。通过多个诚实节点之间的合作，以太坊网络可以维持其安全性和去中心化特性。

---

Exported on 2023年3月15日 上午10:29.