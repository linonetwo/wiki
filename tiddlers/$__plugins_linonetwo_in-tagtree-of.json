{"tiddlers":{"$:/plugins/linonetwo/in-tagtree-of/index.js":{"title":"$:/plugins/linonetwo/in-tagtree-of/index.js","text":"\"use strict\";function getTiddlersRecursively(e,t){const i=$tw.wiki.getTiddlersWithTag(e);let n,l;if(i.length>0){if(t.length>0)if(t.length<i.length)for(n=0;n<t.length;n++)-1!==(l=i.indexOf(t[n]))&&i.splice(l,1);else for(n=i.length-1;n>=0;n--)-1!==(l=t.indexOf(i[n]))&&i.splice(n,1);$tw.utils.pushTop(t,i),i.forEach(function(e){getTiddlersRecursively(e,t)})}}exports[\"in-tagtree-of\"]=function(e,t){const i=t.operand,n=\"inclusive\"===t.suffix,l=\"!\"===t.prefix,s=$tw.wiki.getGlobalCache(`in-tagtree-of-${i}-${n?\"includeRoot\":\"excludeRoot\"}`,()=>{const e=[];return getTiddlersRecursively(i,e),n?[i,...e]:e}),r=[];return e((e,t)=>{s.includes(t)!==l&&r.push(t)}),r};","creator":"LinOnetwo","type":"application/javascript","module-type":"filteroperator"},"$:/plugins/linonetwo/in-tagtree-of/readme":{"title":"$:/plugins/linonetwo/in-tagtree-of/readme","creator":"LinOnetwo","type":"text/vnd.tiddlywiki","text":"A very fast version of `kin::to[xxx]`.\n\n> Finds out where a tiddler originates from, is it in a tag tree with xxx as root?\n\n!! Usage\n\nSee [[demo site|https://tiddly-gittly.github.io/in-tagtree-of/]] for interactive examples.\n\n!!! Normal usage\n\n`[[Ling]in-tagtree-of[Clancy]]` : check if `Ling` is ''in a tag tree'' with `Clancy` as root.\n\n`[all[tiddlers]!in-tagtree-of[Clancy]]` : with `!` prefix, get all tiddlers that are ''not'' in a tag tree with `Clancy` as root.\n\n!!! Advanced usage\n\n`[all[tiddlers]in-tagtree-of:inclusive[Clancy]]` : with `inclusive` suffix, get all tiddlers that are ''in a tag tree'' with `Clancy` as root, ''including `Clancy` himself''\n"}}}