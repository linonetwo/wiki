created: 20200817031720311
modified: 20200817040209590
tags: 动态布局编辑器 反思 技术细节
title: pattern动态布局编辑器提交MR后又做的修改
tmap.id: cf413b3b-998a-4164-abaa-6cfe7c6aa6a4
type: text/vnd.tiddlywiki

例如[[MR|展现优化MergeRequest]]提交后被[[孙文峰]]打回需要修改、测试时发现有 bug 得改等。总之自己以为没问题了，但其实还是问题一大堆。

!! 样式泛化前端字段拍平（打平数据供分析师分析）

# getValues 在 brick 不是经过编辑器初始化而是自己 new 的时候，会返回比最终保存的 JSON 更多的东西，所以不要把保存好的数据自己 new 成 b'r
# 数据转换在 nodejs 网关上做，不要在客户端做。尽量让客户端代码精简。
# 不在 server 中引用 client 的文件，例如类型信息，不然会一大堆 ts 报错。类型可以复制一份变成 IServerXXX
# Endcard 的模板信息保存在后端的数据库里，我不该直接用 orm 操作他们的数据库，而是应该写一个轻服务转换函数，让后端调用我的函数刷库
# 更新数据时，不能只 select 要改的字段，得取出所有 uniq 或 primary 的字段保存时才不会说 `typeorm Duplicate entry`
# 因为 brick 往数据库保存为字符串，我对字符串 JSON.parse ，需要处理空字符串、脏数据等情况，有错误返回 `'{}'`
# 出错了要用 logger.error 往 log 表里记一下报错
# 供分析使用的字段不要放到 log 表和子模板表里。

!! EndcardV3编辑器支持滑动卡片

# 在编辑器这种自己实现布局引擎的地方，尽量不用 em，而是用 px
# 保存数据时不要保存元信息，元信息应该是在[[创意和动态样式管理平台]]上创建模板时保存到另一个表里，取用也从那里取（虽然这会导致实际拖的模板和元信息不一致）
# 编辑器图片可以使用我们已有的占位符图片。不需要真实的图片地址，如果说展示效果不佳，假数据中放图片时，先上传到 TOS 然后把 CDN 地址的 host 替换为 `@byted/ad-union-utils` 里的域名变量再放到假数据管理器 appManager 里
# 在渲染时判断 brick 是哪种 brick，尽量不要使用 `brick.type === xxx` 判断，而应该使用 `instanceof`，以防止协作时出现罕见错误
# props （描述组件有哪些可以修改的属性）尽量继承已有的组件的 props，以保证属性上新时不用大改
# 把初始化尽量收敛到基类里，子类里仅作传参简单调用，基类里的复杂初始化也收敛到 `renderXXX` 的函数里
# 