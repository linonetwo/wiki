{"tiddlers":{"$:/plugins/linonetwo/ical-calendar-importer/importer":{"title":"$:/plugins/linonetwo/ical-calendar-importer/importer","creator":"LinOnetwo","type":"text/vnd.tiddlywiki","text":"!!! title of your calendar file dragged in:\n\n<$edit-text tag=\"input\" tiddler=\"$:/state/TryImportYourCalendar/name\"/>\n\n!!! your custom prefix to them, so they are easier to search.\n\nFor example, \"Calendar/\", this will put them into a folder \"Calendar\", in nodejs wiki. Leave blank if you don't need a prefix, which is totally ok.\n\n<$edit-text tag=\"input\" tiddler=\"$:/state/TryImportYourCalendar/prefix\"/>\n\n!!! Tag for the category tiddler\n\nThisTag → CategoryTitle → EachEvent\n\nYou may use \"Calendar\" for this, so your imported calendar will add a \"Calendar\" tag. Leave blank if you don't need a tag, which is totally ok.\n\n<$edit-text tag=\"input\" tiddler=\"$:/state/TryImportYourCalendar/tagForCategory\"/>\n\n!!! Start import\n\n<$button>\n  Import {{$:/state/TryImportYourCalendar/name}}\n  <$action-transformical $icaltitle={{$:/state/TryImportYourCalendar/name}} importEvent=\"no\" prefix={{$:/state/TryImportYourCalendar/prefix}} fallbackCategoryTitle=\"MyCalendar\">\n    <$let currentTiddler=<<createTiddler-title>>>\n      <$action-listops $tags={{$:/state/TryImportYourCalendar/tagForCategory}} />\n      <$action-setfield $tiddler=\"$:/state/TryImportYourCalendar/latestImportedCategoryTitle\" text=<<createTiddler-title>> />\n    </$let>\n  </$action-transformical>\n  <$action-transformical $icaltitle={{$:/state/TryImportYourCalendar/name}} importEvent=\"yes\" prefix={{$:/state/TryImportYourCalendar/prefix}} fallbackCategoryTitle=\"MyCalendar\" />\n</$button>\n\n<$list filter=\"[tag{$:/state/TryImportYourCalendar/latestImportedCategoryTitle}]\">\n  <$link><<currentTiddler>></$link>\n</$list>"},"$:/plugins/linonetwo/ical-calendar-importer/widget.js":{"title":"$:/plugins/linonetwo/ical-calendar-importer/widget.js","text":"\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// node_modules/icalts/dist/src/constants.js\nvar require_constants = __commonJS({\n  \"node_modules/icalts/dist/src/constants.js\"(exports2) {\n    \"use strict\";\n    Object.defineProperty(exports2, \"__esModule\", { value: true });\n    exports2.VALARM = exports2.VEVENT = exports2.VTIMEZONE = exports2.VCALENDAR = exports2.END = exports2.BEGIN = exports2.EQUAL = exports2.SEMICOLON = exports2.COLON = exports2.SPACE = exports2.NEW_LINE = void 0;\n    exports2.NEW_LINE = /\\r\\n|\\n|\\r/;\n    exports2.SPACE = \" \";\n    exports2.COLON = \":\";\n    exports2.SEMICOLON = \";\";\n    exports2.EQUAL = \"=\";\n    exports2.BEGIN = \"BEGIN\";\n    exports2.END = \"END\";\n    exports2.VCALENDAR = \"VCALENDAR\";\n    exports2.VTIMEZONE = \"VTIMEZONE\";\n    exports2.VEVENT = \"VEVENT\";\n    exports2.VALARM = \"VALARM\";\n  }\n});\n\n// node_modules/icalts/dist/src/lines2tree.js\nvar require_lines2tree = __commonJS({\n  \"node_modules/icalts/dist/src/lines2tree.js\"(exports2) {\n    \"use strict\";\n    Object.defineProperty(exports2, \"__esModule\", { value: true });\n    exports2.lines2tree = void 0;\n    var constants_1 = require_constants();\n    var preprocessing = (lines) => {\n      let output = [];\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        if (line.startsWith(constants_1.SPACE)) {\n          output[output.length - 1] += line.trim();\n        } else if (line) {\n          output.push(line);\n        }\n      }\n      return output;\n    };\n    var lines2tree2 = (rawLines) => {\n      const lines = preprocessing(rawLines);\n      return process(lines);\n    };\n    exports2.lines2tree = lines2tree2;\n    var process = (lines, intend = 0) => {\n      const output = {};\n      let componentName;\n      for (let i = 0; i < lines.length; i++) {\n        const line = lines[i];\n        const index = line.indexOf(constants_1.COLON);\n        const key = line.substr(0, index);\n        const value = line.substr(index + 1);\n        if (key === constants_1.BEGIN) {\n          componentName = value;\n          const lastLine = [constants_1.END, componentName].join(constants_1.COLON);\n          const lastIndex = lines.indexOf(lastLine, i);\n          const newLines = lines.slice(i + 1, lastIndex);\n          if (newLines.length) {\n            const tree = process(newLines, intend + 1);\n            if (!output[componentName])\n              output[componentName] = [];\n            const array = output[componentName];\n            array.push(tree);\n            output[componentName] = array;\n            i = lastIndex;\n          }\n        } else if (line && !line.startsWith(constants_1.END)) {\n          const kv = processKeyValue(key, value);\n          if (kv) {\n            const k = kv.key;\n            output[k] = kv;\n          } else {\n            output[key] = value;\n          }\n        }\n      }\n      return output;\n    };\n    var processKeyValue = (key, value) => {\n      if (key.includes(constants_1.SEMICOLON)) {\n        const keys = key.split(constants_1.SEMICOLON);\n        const k = keys[0];\n        let obj = {\n          key: k,\n          __value__: value\n        };\n        for (let i = 1; i < keys.length; i++) {\n          const kv = keys[i].split(constants_1.EQUAL);\n          const k2 = kv[0];\n          const v = kv[1];\n          obj[k2] = v;\n        }\n        return obj;\n      }\n      return null;\n    };\n  }\n});\n\n// node_modules/icalts/dist/src/index.js\nvar require_src = __commonJS({\n  \"node_modules/icalts/dist/src/index.js\"(exports2) {\n    \"use strict\";\n    Object.defineProperty(exports2, \"__esModule\", { value: true });\n    exports2.lines2tree = void 0;\n    var lines2tree_1 = require_lines2tree();\n    Object.defineProperty(exports2, \"lines2tree\", { enumerable: true, get: function() {\n      return lines2tree_1.lines2tree;\n    } });\n  }\n});\n\n// node_modules/ical-date-parser/lib/iCalDateParser.min.js\nvar require_iCalDateParser_min = __commonJS({\n  \"node_modules/ical-date-parser/lib/iCalDateParser.min.js\"(exports2, module2) {\n    !function(t, e) {\n      \"object\" == typeof exports2 && \"object\" == typeof module2 ? module2.exports = e() : \"function\" == typeof define && define.amd ? define(\"iCalDateParser\", [], e) : \"object\" == typeof exports2 ? exports2.iCalDateParser = e() : t.iCalDateParser = e();\n    }(exports2, function() {\n      return function(t) {\n        function e(n) {\n          if (r[n])\n            return r[n].exports;\n          var o = r[n] = { i: n, l: false, exports: {} };\n          return t[n].call(o.exports, o, o.exports, e), o.l = true, o.exports;\n        }\n        var r = {};\n        return e.m = t, e.c = r, e.i = function(t2) {\n          return t2;\n        }, e.d = function(t2, r2, n) {\n          e.o(t2, r2) || Object.defineProperty(t2, r2, { configurable: false, enumerable: true, get: n });\n        }, e.n = function(t2) {\n          var r2 = t2 && t2.__esModule ? function() {\n            return t2.default;\n          } : function() {\n            return t2;\n          };\n          return e.d(r2, \"a\", r2), r2;\n        }, e.o = function(t2, e2) {\n          return Object.prototype.hasOwnProperty.call(t2, e2);\n        }, e.p = \"\", e(e.s = 0);\n      }([function(t, e, r) {\n        \"use strict\";\n        function n(t2) {\n          if (!o(t2))\n            throw new Error(\"Not a valid iCal date format\");\n          var e2 = t2.substr(0, 4), r2 = parseInt(t2.substr(4, 2), 10) - 1, n2 = t2.substr(6, 2), u2 = t2.substr(9, 2), a2 = t2.substr(11, 2), i = t2.substr(13, 2);\n          return new Date(Date.UTC(e2, r2, n2, u2, a2, i));\n        }\n        function o(t2) {\n          var e2 = t2.split(\"\");\n          return 16 === e2.length && (\"T\" === e2[u] && (\"Z\" === e2[a] && e2.filter(function(t3, e3) {\n            return e3 !== u && e3 !== a;\n          }).every(function(t3) {\n            return !isNaN(parseInt(t3));\n          })));\n        }\n        Object.defineProperty(e, \"__esModule\", { value: true }), e.default = n;\n        var u = 8, a = 15;\n        t.exports = e.default;\n      }]);\n    });\n  }\n});\n\n// src/index.ts\nvar src_exports = {};\n__toCommonJS(src_exports);\nvar import_icalts = __toESM(require_src());\nvar import_ical_date_parser = __toESM(require_iCalDateParser_min());\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\nvar TransformICalWidget = class extends Widget {\n  icalTiddlerTitleToImport;\n  titlePrefix;\n  eventOffset;\n  eventLimit;\n  fallbackCategoryTitle;\n  rootTags;\n  mode = \"categories\" /* categories */;\n  constructor(parseTreeNode, options) {\n    super(parseTreeNode, options);\n    this.initialise(parseTreeNode, options);\n  }\n  refresh(changedTiddlers) {\n    const changedAttributes = this.computeAttributes();\n    if ($tw.utils.count(changedAttributes) > 0) {\n      this.refreshSelf();\n      return true;\n    }\n    return this.refreshChildren(changedTiddlers);\n  }\n  render(parent, nextSibling) {\n    this.parentDomNode = parent;\n    this.computeAttributes();\n    this.execute();\n    this.renderChildren(parent, nextSibling);\n  }\n  execute() {\n    this.icalTiddlerTitleToImport = this.getAttribute(\"$icaltitle\");\n    this.titlePrefix = this.getAttribute(\"prefix\");\n    this.fallbackCategoryTitle = this.getAttribute(\"fallbackCategoryTitle\");\n    this.eventLimit = this.getAttribute(\"eventLimit\") ? Number(this.getAttribute(\"eventLimit\")) : void 0;\n    this.eventOffset = this.getAttribute(\"eventOffset\") ? Number(this.getAttribute(\"eventOffset\")) : void 0;\n    this.rootTags = (this.getAttribute(\"rootTags\") ?? \"\").split(\" \").filter(Boolean);\n    this.mode = this.getAttribute(\"importEvent\") === \"yes\" || this.getAttribute(\"importEvent\") === \"true\" ? \"events\" /* events */ : \"categories\" /* categories */;\n    this.makeChildWidgets();\n  }\n  invokeAction(_triggeringWidget, _event) {\n    if (!this.icalTiddlerTitleToImport)\n      return false;\n    const icalContent = $tw.wiki.getTiddlerText(this.icalTiddlerTitleToImport);\n    if (!icalContent)\n      return false;\n    const icalJSON = (0, import_icalts.lines2tree)(icalContent.split(/\\r\\n|\\n|\\r/g));\n    const calendarInfo = icalJSON.VCALENDAR[0];\n    const {\n      PRODID: source,\n      \"X-WR-CALDESC\": description = \"\",\n      \"X-WR-CALNAME\": title = this.fallbackCategoryTitle,\n      \"X-WR-TIMEZONE\": timeZone,\n      VEVENT: events\n    } = calendarInfo;\n    const titlePrefix = this.titlePrefix ?? \"\";\n    const buildTagTiddlerTitle = (categoryName) => `${titlePrefix}${categoryName}`;\n    const buildEventTitle = (eventName, startDate) => `${titlePrefix}${eventName}${startDate ? `-${startDate}` : \"\"}`;\n    const buildTWDate = (jsDateString) => {\n      if (jsDateString.length === 8) {\n        jsDateString += \"T000000Z\";\n      }\n      if (jsDateString.length === 15) {\n        jsDateString += \"Z\";\n      }\n      return $tw.utils.formatDateString((0, import_ical_date_parser.default)(jsDateString), \"[UTC]YYYY0MM0DD0hh0mm0ssXXX\");\n    };\n    if (!title)\n      throw new Error('Calendar title is undefined, set fallbackCategoryTitle=\"xxx\" to fix this');\n    const now = $tw.utils.formatDateString(new Date(), \"[UTC]YYYY0MM0DD0hh0mm0ssXXX\");\n    const tagTiddlerFields = {\n      title: buildTagTiddlerTitle(title),\n      caption: title,\n      text: description.replace(/\\\\n|<br\\/>/g, \"\\n\\n\"),\n      tags: this.rootTags ?? [],\n      source,\n      created: now,\n      modified: now\n    };\n    this.setVariable(\"createTiddler-title\", buildTagTiddlerTitle(title));\n    this.refreshChildren();\n    if (this.mode === \"categories\" /* categories */) {\n      $tw.wiki.addTiddler(tagTiddlerFields);\n      return;\n    }\n    const eventTiddlerFields = (events ?? []).map((event) => {\n      const { SUMMARY, DTSTART, DTEND, CREATED, DESCRIPTION, \"LAST-MODIFIED\": LASTMODIFIED, UID } = event;\n      if (!SUMMARY)\n        return void 0;\n      const startDate = DTSTART === void 0 ? void 0 : typeof DTSTART === \"string\" ? buildTWDate(DTSTART) : buildTWDate(DTSTART.__value__);\n      const endDate = DTEND === void 0 ? void 0 : typeof DTEND === \"string\" ? buildTWDate(DTEND) : buildTWDate(DTEND.__value__);\n      const created = CREATED ? buildTWDate(CREATED) : startDate ?? endDate ?? now;\n      const modified = LASTMODIFIED ? buildTWDate(LASTMODIFIED) : endDate ?? startDate ?? now;\n      return {\n        title: buildEventTitle(SUMMARY, startDate),\n        caption: SUMMARY,\n        text: DESCRIPTION?.replace(/\\\\n|<br\\/>/g, \"\\n\\n\") ?? \"\",\n        startDate,\n        endDate,\n        tags: [buildTagTiddlerTitle(title)],\n        uid: UID,\n        calendarEntry: \"yes\",\n        created,\n        modified,\n        timeZone\n      };\n    }).filter((item) => item !== void 0).slice(this.eventOffset, this.eventLimit);\n    $tw.wiki.addTiddlers(eventTiddlerFields);\n    return true;\n  }\n};\nexports[\"action-transformical\"] = TransformICalWidget;\n","creator":"LinOnetwo","type":"application/javascript","module-type":"widget","hide-body":"yes"},"$:/plugins/linonetwo/ical-calendar-importer/readme":{"title":"$:/plugins/linonetwo/ical-calendar-importer/readme","creator":"LinOnetwo","type":"text/vnd.tiddlywiki","text":"See [[demo site|https://tiddly-gittly.github.io/ical-calendar-importer/]] for advanced usage!\n\n{{$:/plugins/linonetwo/ical-calendar-importer/importer}}"}}}