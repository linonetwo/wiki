{"author":"LinOnetwo","core-version":">=5.1.22","dependents":"","description":"Use TidGi's NodeJS API to sync data to git on the cloud","list":"readme tree","name":"Source Control Management (git) for TidGi Desktop","plugin-type":"plugin","text":"{\"tiddlers\":{\"$:/plugins/linonetwo/source-control-management/PageControlButton\":{\"title\":\"$:/plugins/linonetwo/source-control-management/PageControlButton\",\"tags\":\"$:/tags/PageControls\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"{{$:/plugins/linonetwo/source-control-management/icons/git-sync.svg}} 备份本地Git\",\"description\":\"显示本地笔记是否同步备份到Github，点击可同步\",\"text\":\"<$tidgi-desktop-git-sync-button />\\n\"},\"$:/plugins/linonetwo/source-control-management/SideBarSCMTab\":{\"title\":\"$:/plugins/linonetwo/source-control-management/SideBarSCMTab\",\"tags\":\"$:/tags/SideBar\",\"type\":\"text/vnd.tiddlywiki\",\"caption\":\"SCM\",\"description\":\"Source Control Management\",\"text\":\"<$git-sync-scm-tab />\\n\"},\"$:/plugins/linonetwo/source-control-management/icons/git-pull-request.svg\":{\"title\":\"$:/plugins/linonetwo/source-control-management/icons/git-pull-request.svg\",\"text\":\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"tc-image-button\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 22 22\\\" stroke-width=\\\"2\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n  <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\"/>\\n  <circle cx=\\\"6\\\" cy=\\\"18\\\" r=\\\"2\\\"/>\\n  <circle cx=\\\"6\\\" cy=\\\"6\\\" r=\\\"2\\\"/>\\n  <circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"2\\\"/>\\n  <line x1=\\\"6\\\" y1=\\\"8\\\" x2=\\\"6\\\" y2=\\\"16\\\"/>\\n  <path d=\\\"M11 6h5a2 2 0 0 1 2 2v8\\\"/>\\n  <polyline points=\\\"14 9 11 6 14 3\\\"/>\\n</svg>\",\"type\":\"text/vnd.tiddlywiki\"},\"$:/plugins/linonetwo/source-control-management/icons/git-sync.svg\":{\"title\":\"$:/plugins/linonetwo/source-control-management/icons/git-sync.svg\",\"text\":\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" class=\\\"tc-image-button\\\" width=\\\"22\\\" height=\\\"22\\\" viewBox=\\\"0 0 22 22\\\" stroke-width=\\\"2\\\" stroke=\\\"currentColor\\\" fill=\\\"none\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n  <path stroke=\\\"none\\\" d=\\\"M0 0h24v24H0z\\\"/>\\n  <circle cx=\\\"6\\\" cy=\\\"6\\\" r=\\\"2\\\"/>\\n  <circle cx=\\\"18\\\" cy=\\\"18\\\" r=\\\"2\\\"/>\\n  <path d=\\\"M11 6h5a2 2 0 0 1 2 2v8\\\"/>\\n  <polyline points=\\\"14 9 11 6 14 3\\\"/>\\n  <path d=\\\"M13 18h-5a2 2 0 0 1 -2 -2v-8\\\"/>\\n  <polyline points=\\\"10 15 13 18 10 21\\\"/>\\n</svg>\",\"type\":\"text/vnd.tiddlywiki\"},\"$:/plugins/linonetwo/source-control-management/readme\":{\"title\":\"$:/plugins/linonetwo/source-control-management/readme\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"!! 功能\\n\\n[[WebCatalog|https://webcatalogapp.com/]] 除了[[能将 TiddlyWiki 包装成桌面应用|https://onetwo.ren/%E7%94%A8tiddlywiki%E6%9B%BF%E4%BB%A3notion%E5%92%8Cevernote%E7%AE%A1%E7%90%86%E7%9F%A5%E8%AF%86/]]以外，还提供了自定义 API 并暴露给网页的功能，让我们可以在 Wiki 网页里使用一些高级功能。\\n\\n本插件利用暴露的自定义 API 实现：\\n\\n# 查看本地 NodeJS 版 TiddlyWiki 是否完全与 Github 备份云同步了\\n# 一键同步本地和云端\\n\\n!! 用法\\n\\n当点开 SCM 标签页的时候，会进行一次 git 环境检查，因为使用的 git 库 dugite 比较卡，所以只进行一次检查，如果需要刷新，需要来回切换一下 tab。\\n\"},\"$:/plugins/linonetwo/source-control-management/tree\":{\"title\":\"$:/plugins/linonetwo/source-control-management/tree\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"<<tree prefix:\\\"$:/plugins/linonetwo/source-control-management/\\\">>\"},\"$:/plugins/linonetwo/source-control-management/button.js\":{\"title\":\"$:/plugins/linonetwo/source-control-management/button.js\",\"type\":\"application/javascript\",\"module-type\":\"widget\",\"Modern.TiddlyDev#Origin\":\"button.ts\",\"text\":\"\\\"use strict\\\";var ORIGINAL_ATTACH_SHADOW,MUTATION_OBSERVER_INIT,nextMicrotask,CONNECTION_OBSERVER_INTERNALS_MAP,mutationCallback,OBSERVED_ROOTS,observeRoot,rootObserverQueue,ConnectionObserver,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__esm=(e,t)=>function(){return t=e?(0,e[__getOwnPropNames(e)[0]])(e=0):t},__export=(e,t)=>{for(var o in t)__defProp(e,o,{get:t[o],enumerable:!0})},__copyProps=(t,o,n,i)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let e of __getOwnPropNames(o))__hasOwnProp.call(t,e)||e===n||__defProp(t,e,{get:()=>o[e],enumerable:!(i=__getOwnPropDesc(o,e))||i.enumerable});return t},__toCommonJS=e=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),e),init_esbuild_inject=__esm({\\\"node_modules/.pnpm/tiddlywiki-plugin-dev@0.0.39_postcss@8.4.32_ts-node@10.9.2/node_modules/tiddlywiki-plugin-dev/dist/js/esbuild-inject.js\\\"(){}}),dist_exports={};function isShady(){return\\\"undefined\\\"!=typeof window.ShadyDOM&&\\\"undefined\\\"!=typeof ShadowRoot}function supportsShadowRoots(){return\\\"undefined\\\"!=typeof ShadowRoot}function patchElementPrototypeAttachShadow(o){null==ORIGINAL_ATTACH_SHADOW||isShady()||(Element.prototype.attachShadow=function(e){var t=ORIGINAL_ATTACH_SHADOW.call(this,e);return o(t),t})}function createPausableQueue(t,...e){const o=new Set(e);let n=!1;const i=()=>{for(const e of o)t(e);o.clear()};return{isRunning(){return n},schedule(e){o.add(e),n&&i()},stop(){n=!1},run(){n||(n=!0,i())}}}function nodeListToArray(e){if(\\\"undefined\\\"!=typeof Symbol&&null!=e[Symbol.iterator])return[...e];var t=[];for(let o=0;o<e.length;o++)t[o]=e[o];return t}function queryRoot(e,t){return isShady()?new Set(nodeListToArray(window.ShadyDOM.nativeMethods.querySelectorAll.call(document.documentElement,t))):new Set(\\\"querySelectorAll\\\"in e?nodeListToArray(e.querySelectorAll(t)):[])}function mergeNodes(e,t){return new Set([...null==e?[]:e,...null==t?[]:t])}function isDocumentOrShadowRoot(e){return\\\"activeElement\\\"in e}function observeMissingRoots(e=document.documentElement){if(isDocumentOrShadowRoot(e)&&observeRoot(e),!(isShady()&&e instanceof ShadowRoot)&&supportsShadowRoots()){var t=e.childNodes,o=\\\"shadowRoot\\\"in e&&null!=e.shadowRoot?[e.shadowRoot]:[];for(const n of[...t,...o])observeMissingRoots(n)}}function isConnected(e){return\\\"isConnected\\\"in Node.prototype?e.isConnected:null==e.ownerDocument||!(e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED)}function initializeConnectionObserver(t,o){const n=new Set,i=new Set,s=new Map,r=new WeakMap;let a=!1,c=!1,d=!1;const u=()=>{c=!0;var e=[...n];0<e.length&&o(e,t),n.clear(),a=!1,c=!1},l=e=>{n.add(e),c||a||(a=!0,nextMicrotask(u))};const p=(e,t)=>{let o=s.get(e);var n=queryRoot(e,t),i=mergeNodes(n,null==o?void 0:o.get(t));h(i),null==o&&(o=new Map,s.set(e,o)),o.set(t,n)},h=e=>{for(const n of e){var t=r.get(n),o=isConnected(n);t!==o&&(r.set(n,o),l({connected:o,target:n}))}};var e={observedTargets:i,queryRootAndHandleMutationChanges:p,handleMutationChange:h,addObservedTarget:e=>{if(rootObserverQueue.run(),d||(d=!0,observeMissingRoots()),i.add(e),\\\"string\\\"!=typeof e)h([e]);else for(const t of OBSERVED_ROOTS)p(t,e)},clearObservedTargets:()=>{i.clear()},clearQueue:()=>{var e=[...n];return n.clear(),e}};CONNECTION_OBSERVER_INTERNALS_MAP.set(t,e)}__export(dist_exports,{ConnectionObserver:()=>ConnectionObserver});var init_dist=__esm({\\\"node_modules/.pnpm/@wessberg+connection-observer@1.0.5/node_modules/@wessberg/connection-observer/dist/index.js\\\"(){init_esbuild_inject(),ORIGINAL_ATTACH_SHADOW=Element.prototype.attachShadow,MUTATION_OBSERVER_INIT={childList:!0,subtree:!0},nextMicrotask=e=>{\\\"undefined\\\"!=typeof queueMicrotask?queueMicrotask(e):\\\"undefined\\\"!=typeof Promise?Promise.resolve().then(()=>e()):setTimeout(()=>e(),0)},CONNECTION_OBSERVER_INTERNALS_MAP=new Map,mutationCallback=e=>{for(const t of e)if(\\\"childList\\\"===t.type)for(const o of CONNECTION_OBSERVER_INTERNALS_MAP.values())for(const n of o.observedTargets)\\\"string\\\"==typeof n?o.queryRootAndHandleMutationChanges(t.target,n):o.handleMutationChange([n])},OBSERVED_ROOTS=new Set,observeRoot=(()=>{let t;return function(e){OBSERVED_ROOTS.has(e)||(OBSERVED_ROOTS.add(e),(t=null==t?new MutationObserver(mutationCallback):t).observe(e,MUTATION_OBSERVER_INIT))}})(),rootObserverQueue=createPausableQueue(observeRoot,document.documentElement),ConnectionObserver=class{constructor(e){if(void 0===new.target)throw new TypeError(`Constructor ${ConnectionObserver.name} requires 'new'`);if(void 0===e)throw new ReferenceError(`Failed to construct '${ConnectionObserver.name}': 1 argument required, but only 0 present.`);if(\\\"function\\\"!=typeof e)throw new TypeError(`Failed to construct '${ConnectionObserver.name}': The callback provided as parameter 1 is not a function.`);initializeConnectionObserver(this,e)}get[Symbol.toStringTag](){return\\\"ConnectionObserver\\\"}observe(e){if(void 0===e)throw new ReferenceError(`Failed to execute '${this.observe.name}' on '${ConnectionObserver.name}': 1 argument required, but only 0 present.`);if(\\\"string\\\"!=typeof e&&!(e instanceof Node))throw new TypeError(`Failed to execute '${this.observe.name}' on '${ConnectionObserver.name}': parameter 1 is not of type 'Node' or a DOMString.`);var t=CONNECTION_OBSERVER_INTERNALS_MAP.get(this);null!=t&&t.addObservedTarget(e)}takeRecords(){var e=CONNECTION_OBSERVER_INTERNALS_MAP.get(this);return null==e?[]:e.clearQueue()}disconnect(){var e=CONNECTION_OBSERVER_INTERNALS_MAP.get(this);null!=e&&e.clearObservedTargets()}},patchElementPrototypeAttachShadow(rootObserverQueue.schedule.bind(rootObserverQueue))}}),import_widget=(init_esbuild_inject(),require(\\\"$:/core/modules/widgets/widget.js\\\"));if($tw.browser){const Aa=(init_dist(),__toCommonJS(dist_exports))[\\\"ConnectionObserver\\\"];class Ba extends import_widget.widget{constructor(e,t){super(e,t),this.state={needSetUp:!1,initialized:!1,interval:1e3,count:0,unsync:!1,syncing:!1,checkInLoop:!1},this.connectionObserver=new Aa(e=>{for(var{connected:t}of e)this.state.initialized&&!t&&(this.destroy(),this.connectionObserver?.disconnect?.())}),this.initialise(e,t),this.checkInLoop()}async getWorkspaces(){var e=await window?.service?.workspace?.getWorkspacesAsList?.();const t=await window?.service?.workspace?.getActiveWorkspace?.();return t&&e?e.filter(e=>e.id===t.id||e.isSubWiki&&e.mainWikiID===t.id):[]}render(e,t){var o,n,i;this.parentDomNode=e,this.computeAttributes(),this.state.initialized||(console.log(\\\"this.parentDomNode tab\\\",this.parentDomNode),this.connectionObserver.observe(this.parentDomNode),(o=this.document.createElement(\\\"button\\\")).className=\\\"tc-btn-invisible tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button \\\",o.addEventListener(\\\"click\\\",this.onSyncButtonClick.bind(this)),this.state.needSetUp?(o.className+=\\\"git-sync\\\",o.title=i=\\\"需要配置TidGi\\\",o.ariaLabel=i,o.innerHTML=$tw.wiki.getTiddlerText(\\\"$:/plugins/linonetwo/source-control-management/icons/git-sync.svg\\\")??\\\"\\\"):this.state.syncing?(o.className+=\\\"git-sync syncing\\\",o.title=i=\\\"正在同步到云端\\\",o.ariaLabel=i,o.innerHTML=$tw.wiki.getTiddlerText(\\\"$:/plugins/linonetwo/source-control-management/icons/git-sync.svg\\\")??\\\"\\\"):0!==this.state.count||this.state.unsync?0===this.state.count&&this.state.unsync?(o.className+=\\\"git-pull-request\\\",o.title=\\\"待推送到云端\\\",o.ariaLabel=\\\"待推送到云端\\\",o.innerHTML=$tw.wiki.getTiddlerText(\\\"$:/plugins/linonetwo/source-control-management/icons/git-pull-request.svg\\\")??\\\"\\\"):(o.className+=\\\"git-pull-request\\\",i=this.state.count+\\\" 个文件待提交和推送\\\",o.title=i,o.ariaLabel=i,i=$tw.wiki.getTiddlerText(\\\"$:/plugins/linonetwo/source-control-management/icons/git-pull-request.svg\\\")??\\\"\\\",n=`<span class=\\\"tidgi-scm-count tidgi-scm-count-small\\\">${this.state.count}</span>`,o.innerHTML=`<span>${i}${n}</span>`):(o.className+=\\\"git-sync\\\",o.title=i=\\\"已完全同步到云端\\\",o.ariaLabel=i,o.innerHTML=$tw.wiki.getTiddlerText(\\\"$:/plugins/linonetwo/source-control-management/icons/git-sync.svg\\\")??\\\"\\\"),e.insertBefore(o,t),this.domNodes.push(o),this.state.initialized=!0)}async onSyncButtonClick(){if(!this.state.syncing&&this.state.unsync){this.state.syncing=!0,this.refreshSelf();try{var e=(await this.getWorkspaces()).map(async e=>{await window?.service?.sync?.syncWikiIfNeeded?.(e)});await Promise.all(e)}catch(t){console.error(\\\"NodeJSGitSyncWidget: Error syncing\\\",t)}this.state.syncing=!1,this.refreshSelf()}}async checkInLoop(){window?.service?.git&&\\\"function\\\"==typeof window?.service?.git?.commitAndSync&&\\\"function\\\"==typeof window?.service?.git?.getModifiedFileList&&\\\"function\\\"==typeof window?.service?.workspace?.getWorkspacesAsList?(this.state.needSetUp=!1,await this.checkGitState()):this.state.needSetUp=!0,this.checkLoopTimeout=setTimeout(async()=>{console.log(\\\"checkLoopTimeout button\\\",this.state.checkInLoop),this.state.checkInLoop&&await this.checkInLoop()},this.state.interval)}destroy(){console.log(\\\"destroy button\\\"),this.state.checkInLoop=!1,this.checkLoopTimeout&&clearTimeout(this.checkLoopTimeout),this.state.initialized=!1}async checkGitState(){var e=[];for(const o of await this.getWorkspaces()){var t=$tw.wiki.getTiddlerText(\\\"$:/state/scm-modified-file-list/\\\"+o.wikiFolderLocation);void 0!==t&&(t=JSON.parse(t),e.push(t))}this.state.count=0,this.state.unsync=!1;for(const n of e)0<n.length&&(this.state.count+=n.length,this.state.unsync=!0);return this.refreshSelf()}}exports[\\\"tidgi-desktop-git-sync-button\\\"]=Ba}\"},\"$:/plugins/linonetwo/source-control-management/tab.js\":{\"title\":\"$:/plugins/linonetwo/source-control-management/tab.js\",\"type\":\"application/javascript\",\"module-type\":\"widget\",\"Modern.TiddlyDev#Origin\":\"tab.ts\",\"text\":\"\\\"use strict\\\";var ORIGINAL_ATTACH_SHADOW,MUTATION_OBSERVER_INIT,nextMicrotask,CONNECTION_OBSERVER_INTERNALS_MAP,mutationCallback,OBSERVED_ROOTS,observeRoot,rootObserverQueue,ConnectionObserver,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__esm=(e,t)=>function(){return t=e?(0,e[__getOwnPropNames(e)[0]])(e=0):t},__export=(e,t)=>{for(var o in t)__defProp(e,o,{get:t[o],enumerable:!0})},__copyProps=(t,o,n,i)=>{if(o&&\\\"object\\\"==typeof o||\\\"function\\\"==typeof o)for(let e of __getOwnPropNames(o))__hasOwnProp.call(t,e)||e===n||__defProp(t,e,{get:()=>o[e],enumerable:!(i=__getOwnPropDesc(o,e))||i.enumerable});return t},__toCommonJS=e=>__copyProps(__defProp({},\\\"__esModule\\\",{value:!0}),e),init_esbuild_inject=__esm({\\\"node_modules/.pnpm/tiddlywiki-plugin-dev@0.0.39_postcss@8.4.32_ts-node@10.9.2/node_modules/tiddlywiki-plugin-dev/dist/js/esbuild-inject.js\\\"(){}}),dist_exports={};function isShady(){return\\\"undefined\\\"!=typeof window.ShadyDOM&&\\\"undefined\\\"!=typeof ShadowRoot}function supportsShadowRoots(){return\\\"undefined\\\"!=typeof ShadowRoot}function patchElementPrototypeAttachShadow(o){null==ORIGINAL_ATTACH_SHADOW||isShady()||(Element.prototype.attachShadow=function(e){var t=ORIGINAL_ATTACH_SHADOW.call(this,e);return o(t),t})}function createPausableQueue(t,...e){const o=new Set(e);let n=!1;const i=()=>{for(const e of o)t(e);o.clear()};return{isRunning(){return n},schedule(e){o.add(e),n&&i()},stop(){n=!1},run(){n||(n=!0,i())}}}function nodeListToArray(e){if(\\\"undefined\\\"!=typeof Symbol&&null!=e[Symbol.iterator])return[...e];var t=[];for(let o=0;o<e.length;o++)t[o]=e[o];return t}function queryRoot(e,t){return isShady()?new Set(nodeListToArray(window.ShadyDOM.nativeMethods.querySelectorAll.call(document.documentElement,t))):new Set(\\\"querySelectorAll\\\"in e?nodeListToArray(e.querySelectorAll(t)):[])}function mergeNodes(e,t){return new Set([...null==e?[]:e,...null==t?[]:t])}function isDocumentOrShadowRoot(e){return\\\"activeElement\\\"in e}function observeMissingRoots(e=document.documentElement){if(isDocumentOrShadowRoot(e)&&observeRoot(e),!(isShady()&&e instanceof ShadowRoot)&&supportsShadowRoots()){var t=e.childNodes,o=\\\"shadowRoot\\\"in e&&null!=e.shadowRoot?[e.shadowRoot]:[];for(const n of[...t,...o])observeMissingRoots(n)}}function isConnected(e){return\\\"isConnected\\\"in Node.prototype?e.isConnected:null==e.ownerDocument||!(e.ownerDocument.compareDocumentPosition(e)&e.DOCUMENT_POSITION_DISCONNECTED)}function initializeConnectionObserver(t,o){const n=new Set,i=new Set,r=new Map,s=new WeakMap;let a=!1,c=!1,d=!1;const l=()=>{c=!0;var e=[...n];0<e.length&&o(e,t),n.clear(),a=!1,c=!1},u=e=>{n.add(e),c||a||(a=!0,nextMicrotask(l))};const p=(e,t)=>{let o=r.get(e);var n=queryRoot(e,t),i=mergeNodes(n,null==o?void 0:o.get(t));h(i),null==o&&(o=new Map,r.set(e,o)),o.set(t,n)},h=e=>{for(const n of e){var t=s.get(n),o=isConnected(n);t!==o&&(s.set(n,o),u({connected:o,target:n}))}};var e={observedTargets:i,queryRootAndHandleMutationChanges:p,handleMutationChange:h,addObservedTarget:e=>{if(rootObserverQueue.run(),d||(d=!0,observeMissingRoots()),i.add(e),\\\"string\\\"!=typeof e)h([e]);else for(const t of OBSERVED_ROOTS)p(t,e)},clearObservedTargets:()=>{i.clear()},clearQueue:()=>{var e=[...n];return n.clear(),e}};CONNECTION_OBSERVER_INTERNALS_MAP.set(t,e)}__export(dist_exports,{ConnectionObserver:()=>ConnectionObserver});var init_dist=__esm({\\\"node_modules/.pnpm/@wessberg+connection-observer@1.0.5/node_modules/@wessberg/connection-observer/dist/index.js\\\"(){init_esbuild_inject(),ORIGINAL_ATTACH_SHADOW=Element.prototype.attachShadow,MUTATION_OBSERVER_INIT={childList:!0,subtree:!0},nextMicrotask=e=>{\\\"undefined\\\"!=typeof queueMicrotask?queueMicrotask(e):\\\"undefined\\\"!=typeof Promise?Promise.resolve().then(()=>e()):setTimeout(()=>e(),0)},CONNECTION_OBSERVER_INTERNALS_MAP=new Map,mutationCallback=e=>{for(const t of e)if(\\\"childList\\\"===t.type)for(const o of CONNECTION_OBSERVER_INTERNALS_MAP.values())for(const n of o.observedTargets)\\\"string\\\"==typeof n?o.queryRootAndHandleMutationChanges(t.target,n):o.handleMutationChange([n])},OBSERVED_ROOTS=new Set,observeRoot=(()=>{let t;return function(e){OBSERVED_ROOTS.has(e)||(OBSERVED_ROOTS.add(e),(t=null==t?new MutationObserver(mutationCallback):t).observe(e,MUTATION_OBSERVER_INIT))}})(),rootObserverQueue=createPausableQueue(observeRoot,document.documentElement),ConnectionObserver=class{constructor(e){if(void 0===new.target)throw new TypeError(`Constructor ${ConnectionObserver.name} requires 'new'`);if(void 0===e)throw new ReferenceError(`Failed to construct '${ConnectionObserver.name}': 1 argument required, but only 0 present.`);if(\\\"function\\\"!=typeof e)throw new TypeError(`Failed to construct '${ConnectionObserver.name}': The callback provided as parameter 1 is not a function.`);initializeConnectionObserver(this,e)}get[Symbol.toStringTag](){return\\\"ConnectionObserver\\\"}observe(e){if(void 0===e)throw new ReferenceError(`Failed to execute '${this.observe.name}' on '${ConnectionObserver.name}': 1 argument required, but only 0 present.`);if(\\\"string\\\"!=typeof e&&!(e instanceof Node))throw new TypeError(`Failed to execute '${this.observe.name}' on '${ConnectionObserver.name}': parameter 1 is not of type 'Node' or a DOMString.`);var t=CONNECTION_OBSERVER_INTERNALS_MAP.get(this);null!=t&&t.addObservedTarget(e)}takeRecords(){var e=CONNECTION_OBSERVER_INTERNALS_MAP.get(this);return null==e?[]:e.clearQueue()}disconnect(){var e=CONNECTION_OBSERVER_INTERNALS_MAP.get(this);null!=e&&e.clearObservedTargets()}},patchElementPrototypeAttachShadow(rootObserverQueue.schedule.bind(rootObserverQueue))}}),import_widget=(init_esbuild_inject(),require(\\\"$:/core/modules/widgets/widget.js\\\"));if(init_esbuild_inject(),$tw.browser){const Aa=(init_dist(),__toCommonJS(dist_exports))[\\\"ConnectionObserver\\\"];class Ba extends import_widget.widget{constructor(e,t){super(e,t),this.state={initialized:!1,needSetUp:!1,repoInfo:{},count:0,unsync:!1,interval:1e3,checkInLoop:!1},this.connectionObserver=new Aa(e=>{for(var{connected:t}of e)this.state.initialized&&!t&&(this.destroy(),this.connectionObserver?.disconnect?.())}),this.initialise(e,t),this.state.checkInLoop=!0,this.checkInLoop()}async getWorkspaces(){var e=await window?.service?.workspace?.getWorkspacesAsList?.();const t=await window?.service?.workspace?.getActiveWorkspace?.();return t&&e?e.filter(e=>e.id===t.id||e.isSubWiki&&e.mainWikiID===t.id):[]}render(e,t){if(this.parentDomNode=e,this.computeAttributes(),!this.state.initialized){var o=this.document.createElement(\\\"div\\\");o.className=\\\"\\\",console.log(\\\"this.parentDomNode tab\\\",this.parentDomNode),this.connectionObserver.observe(this.parentDomNode);for(const h of Object.keys(this.state.repoInfo).sort((e,t)=>e.length-t.length)){var n=this.state.repoInfo[h],i=this.document.createElement(\\\"div\\\"),r=this.document.createElement(\\\"h4\\\"),s=this.document.createElement(\\\"span\\\"),a=(s.className=\\\"tidgi-scm-count\\\",s.innerText=String(n.length),h.split(\\\"/\\\").pop());r.innerText=a??\\\"-\\\",r.append(s),i.append(r);for(const m of n){var c=this.document.createElement(\\\"div\\\"),d=(c.className=\\\"tidgi-scm-file-info\\\",this.document.createElement(\\\"span\\\")),l=(d.className=\\\"tidgi-scm-file-changed-type\\\",d.innerText=this.mapChangeTypeToText(m.type),this.document.createElement(\\\"a\\\"));l.className=\\\"tidgi-scm-file-name tc-tiddlylink tc-tiddlylink-resolves tc-popup-handle tc-popup-absolute\\\";const f=this.getTitleByPath(m.fileRelativePath);l.innerText=f,l.addEventListener(\\\"click\\\",()=>{this.onChangedFileNameClicked(f)});var u=this.document.createElement(\\\"a\\\"),p=(u.className=\\\"tidgi-scm-file-open-in-folder tc-tiddlylink tc-tiddlylink-resolves tc-popup-handle tc-popup-absolute\\\",$tw.wiki.getTiddlerText(\\\"$:/plugins/linonetwo/open-in-external-app/icons/open-in-folder\\\")??\\\"O\\\");u.innerHTML=p,u.addEventListener(\\\"click\\\",()=>{this.onOpenInFolderClicked(m.filePath)}),c.append(d),c.append(l),c.append(u),i.append(c)}o.append(i)}e.insertBefore(o,t),this.domNodes.push(o),this.state.initialized=!0}}onChangedFileNameClicked(e){var t=window.meta?.()?.workspaceID;t&&window?.service?.wiki?.wikiOperationInBrowser?.(\\\"wiki-open-tiddler\\\",t,[e])}onOpenInFolderClicked(e){window?.service?.[\\\"native\\\"]?.openPath?.(e,!0)}getTitleByPath(e){return e.startsWith(\\\"plugins\\\")?\\\"$:/\\\"+e:e.startsWith(\\\"tiddlers/\\\")?e.replace(\\\"tiddlers/\\\",\\\"\\\").replace(/\\\\.tid$/,\\\"\\\"):e}async getFolderInfo(){return(await this.getWorkspaces()).map(({wikiFolderLocation:e,gitUrl:t})=>({wikiPath:e,gitUrl:t}))}mapChangeTypeToText(e){return\\\"??\\\"!==e?e:\\\"+\\\"}async checkInLoop(){window?.service?.git&&\\\"function\\\"==typeof window?.service?.git?.commitAndSync&&\\\"function\\\"==typeof window?.service?.git?.getModifiedFileList&&\\\"function\\\"==typeof window?.service?.workspace?.getWorkspacesAsList?(this.state.needSetUp=!1,await this.checkGitState()):this.state.needSetUp=!0,this.checkLoopTimeout=setTimeout(async()=>{console.log(\\\"checkLoopTimeout tab\\\",this.state.checkInLoop),this.state.checkInLoop&&await this.checkInLoop()},this.state.interval)}destroy(){console.log(\\\"destroy tab\\\"),this.state.checkInLoop=!1,this.checkLoopTimeout&&clearTimeout(this.checkLoopTimeout),this.state.initialized=!1}async checkGitState(){this.state.count=0,this.state.unsync=!1,this.state.repoInfo={};var e=(await this.getFolderInfo()).map(async({wikiPath:e})=>{var t=await window?.service?.git?.getModifiedFileList?.(e);t&&(t.sort((e,t)=>e.fileRelativePath>t.fileRelativePath?1:-1),$tw.wiki.addTiddler({title:\\\"$:/state/scm-modified-file-list/\\\"+e,text:JSON.stringify(t)}),this.state.repoInfo[e]=t)});return await Promise.all(e),this.refreshSelf()}}exports[\\\"git-sync-scm-tab\\\"]=Ba}\"},\"$:/plugins/linonetwo/source-control-management/tab.css\":{\"title\":\"$:/plugins/linonetwo/source-control-management/tab.css\",\"tags\":[\"$:/tags/Stylesheet\"],\"type\":\"text/css\",\"Modern.TiddlyDev#Origin\":\"../../temp_stylePlugin:src/source-control-management/style.css\",\"text\":\"button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button.git-sync{cursor:not-allowed}span.tidgi-scm-count{position:relative;background:#696969;color:#fff;border-radius:9999px;opacity:.5;min-width:1.2em;margin-left:.5em;padding-left:.5em;padding-top:.1em;padding-right:.5em;width:-moz-fit-content;width:fit-content}span.tidgi-scm-count-small{font-size:.6em;padding-left:.2em;padding-right:.2em;line-height:1.3em;margin-left:-1em}button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button>span>svg,button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button>svg{fill:none;color:#aaa}button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button>span>svg:hover,button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button>svg:hover{fill:none;color:#444}@keyframes rotation{from{transform:rotate(0)}to{transform:rotate(359deg)}}button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button.syncing>span>svg,button.tc-btn-invisible.tc-btn-plugins-linonetwo-tidgi-desktop-git-sync-button.syncing>svg{animation:2s linear infinite rotation}div.tidgi-scm-file-info{margin-bottom:5px}span.tidgi-scm-file-changed-type{margin-right:5px}a.tidgi-scm-file-name{color:#333;cursor:pointer}a.tidgi-scm-file-open-in-folder{color:#333;cursor:pointer;padding:0}a.tidgi-scm-file-open-in-folder>svg{padding:0;height:1em}\"}}}","title":"$:/plugins/linonetwo/source-control-management","type":"application/json","version":"0.2.2","Modern.TiddlyDev#SHA256-Hashed":"5645c776e5b87b98a77a63a342f6c84656fd906da20922598078490d9522fb58"}