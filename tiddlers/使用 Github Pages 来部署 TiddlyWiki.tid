created: 20200411123429657
modified: 20200411125247515
tags: TW运维
title: 使用 Github Pages 来部署 TiddlyWiki
type: text/vnd.tiddlywiki

!! 在本地使用

我是用[[serveAndWatchHTML.js|https://github.com/linonetwo/wiki/blob/455e6a21bb/serveAndWatchHTML.js]]这个脚本在本地启动一个服务器，把 HTML 版的 TiddlyWiki 推送到本地的某个端口上，只要访问这个端口就可以在本地打开 TiddlyWiki。

HTML 版的 TiddlyWiki 在手动保存和自动保存时，都会把一个 `tiddlywiki.html` 文件下载到 `~/Downloads` 文件夹里，而上述脚本就会自动把这个文件重命名成 `index.html` 并移动到 Git 仓库里，然后自动每半小时提交备份到 Github 去。

我通过[[installHTMLWatcher.sh|https://github.com/linonetwo/wiki/blob/455e6a21bb/scripts/installHTMLWatcher.sh]]这个脚本让上述 JS 脚本开机自动执行，这样我就可以随时打开本地的 TiddlyWiki 了，不需要手动去启动服务器。

!! 部署公网可用的静态页面

如此一来，在 Github 仓库里就会有一个 `index.html`，我接下来把它设置为 Github Pages 服务要展示的页面。

在 [[Readme.md|https://github.com/linonetwo/wiki/blob/1360cfbaf211f7a9701b47a34be8cbea62005c3c/README.md]] 顶部加上这样的元信息：

```markdown
---
permalink: /index.html
---
```

这会告诉 Github 展示仓库根目录的 `index.html`。

接着打开 `https://github.com/linonetwo/wiki/settings`，向下找到 ''GitHub Pages'' 这一设置项，跟着[[教程|https://pages.github.com/]]配置一下就好了。

---

这套方案的优点是，在移动端可以使用[[Github Saver|https://github.com/kookma/TW5-GitHub-Saver]]来编辑 Wiki，做到全平台使用。

缺点是每次查看和修改都要下载巨大的 Wiki，特别是在 Wiki 中嵌入了不少图片之后。