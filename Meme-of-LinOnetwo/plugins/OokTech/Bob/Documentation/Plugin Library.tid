title: $:/plugins/OokTech/Bob/Documentation/Bob Plugin Library
caption: Bob Plugin Library
tags: [[Bob Documentation]]
description: setting up Bob as a plugin library

A Bob server can be configured as a plugin library.
To do this you need to set the `pluginLibrary` key under `API` to `yes` in the
settings and then set the `pluginsPath` key to wherever you have your plugins.

Plugins are assumed to be in the same format as used by the core wiki.
So under the plugins folder there should be folders that have the author names
and under those folders that have the plugin names which hold the `plugin.info`
files.

Look at the plugins folder of the tiddlywiki5 repo for an example.

When listing plugins Bob looks for a tiddler whose title ends with `/readme`
(capitilisation is not important, so `/ReadMe`, `/README` or `/ReAdMe` would
also work) and sends the text field of that tiddler with the plugin info.

!!! Adding Plugins to the Library

There is a tab `Manage Plugins` under `Bob Settings` that has tools for adding
plugins that you have dragged and dropped into the wiki to the plugin library.
Only plugins that are not already in the library are listed in this.

Alternately you can add plugins to the library in three ways:

- Git - You can use git to clone plugins into your plugin folder and they can
  be accessible in the library.
- API - You can use the api to POST plugins and have them saved in the library
- Websocket Message - If you have the plugin in your wiki via drag and drop
  than you can add it to the library using the `savePluginFolder` message.

!!! Changing Plugins Used by a Wiki

In the `Manage Plugins` tab under `Bob Settings` in the $:/ControlPanel you can
change which plugins are in a wiki. You should click `Update Plugin List` to
make sure that you have a complete list of plugins.

Then you can select whichever plugins from the list that you want to have in
your wiki. After selecting the plugins you want click `Save Plugin Selection`
to update the `tiddlywiki.info` file then reload the page. Clicking
`Refresh Page` will do this, or use the normal browser reload.

After reloading the wiki will have the new list of plugins.

''Note:'' This will not remove plugins that you have added by drag and drop.
You have to delete them like normal. If you have added a plugin using this
method after you added the plugin via drag and drop you can delete the plugin
tiddler before reloading the page.

!! Developer Information

''Note:'' This is information for developers. If you are setting up or using
Bob as a plugin library you can ignore this. This section is only relevant if
you are going to create your own interface to the plugin library.

There are two RESTful api endpoints that are part of the plugin library. They both accept POSTs and return the requested information as stringified JSON.

* `/api/plugins/list` returns a list of all plugins available in the library
  (see list format below)
* `/api/plugins/fetch/Author/Plugin` returns the plugin as a json object.

The plugin list endpoint returns a list as an array in this format:

```
[
  {
    name: Author/Plugin,
    description: plugin description field,
    tiddlerName: the plugin tiddler name,
    version: the plugin version,
    author: the plugin author,
    readme: the text of the plugins readme tiddler
  },
  {
    name: Author/Plugin2,
    description: plugin description field,
    tiddlerName: the plugin2 tiddler name,
    version: the plugin version,
    author: the plugin author,
    readme: the text of the plugins readme tiddler
  }
]
```
